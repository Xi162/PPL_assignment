Program([VarDecl(Id(a), NumberType, None, None), VarDecl(Id(b), ArrayType([5.0, 4.0], NumberType), None, None), VarDecl(Id(k), None, dynamic, None), VarDecl(Id(s), None, var, StringLit(Hello)), VarDecl(Id(str), StringType, None, StringLit(\' Hi My name is 'Huy', I say: '"Hello'")), FuncDecl(Id(print), [VarDecl(Id(a), NumberType, None, None)], None), FuncDecl(Id(main), [], Block([VarDecl(Id(i), None, var, NumLit(0.0)), For(Id(i), BinaryOp(<, Id(i), NumLit(8.0)), NumLit(1.0), Block([If((BinaryOp(=, BinaryOp(%, Id(i), NumLit(2.0)), NumLit(0.0)), CallStmt(Id(print), [Id(i)])), [(BinaryOp(=, BinaryOp(%, Id(i), NumLit(3.0)), NumLit(0.0)), CallStmt(Id(print), [Id(i)])), (BinaryOp(=, BinaryOp(%, Id(i), NumLit(4.0)), NumLit(0.0)), Break)], Continue)]))])), FuncDecl(Id(print), [VarDecl(Id(a), NumberType, None, None)], Block([AssignStmt(Id(a), NumLit(1.0))])), FuncDecl(Id(ah), [VarDecl(Id(b), ArrayType([9.0, 10.0], StringType), None, None), VarDecl(Id(c), BoolType, None, None)], Block([AssignStmt(Id(a), NumLit(1.0)), For(Id(a), BinaryOp(<, Id(a), BinaryOp(+, NumLit(8.0), NumLit(9.0))), NumLit(1.0), Block([If((BinaryOp(=, BinaryOp(%, Id(i), NumLit(2.0)), NumLit(0.0)), Block([AssignStmt(Id(a), NumLit(10400.0)), CallStmt(Id(ah), [Id(a), Id(b)])])), [(BinaryOp(=, BinaryOp(%, Id(i), NumLit(3.0)), NumLit(0.0)), Return(NumLit(1.0))), (BinaryOp(=, BinaryOp(%, Id(i), NumLit(4.0)), NumLit(0.0)), Break)], Continue)]))]))])